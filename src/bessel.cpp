#include "bessel.h"

#include <cmath>

double bessel_i0(double x) {
	if(x < 2.0) {
		double t = x - 1.0;
		double t2 = 2.0 * t;
		double a = 0.0;
		double b = 0.0;
		b = t2 * a - b + 9.4011681382854011e-21;
		a = t2 * b - a + 4.3881688636409392e-19;
		b = t2 * a - b + 1.0837719829371888e-17;
		a = t2 * b - a + 4.4894623528939228e-16;
		b = t2 * a - b + 9.7193964971208997e-15;
		a = t2 * b - a + 3.5156949618976747e-13;
		b = t2 * a - b + 6.5394017915879243e-12;
		a = t2 * b - a + 2.0219460080981893e-10;
		b = t2 * a - b + 3.1443385414852762e-09;
		a = t2 * b - a + 8.0705398479349649e-08;
		b = t2 * a - b + 1.0088384560477930e-06;
		a = t2 * b - a + 2.0594821758607758e-05;
		b = t2 * a - b + 1.9456551508716853e-04;
		a = t2 * b - a + 2.9500413489651133e-03;
		b = t2 * a - b + 1.8850940901150217e-02;
		a = t2 * b - a + 1.8684279168405899e-01;
		b = t2 * a - b + 6.2074613276245253e-01;
		return t * b - a + 1.4499791424053058e+00;
	} else if(x < 4.0) {
		double t = x - 3.0;
		double t2 = 2.0 * t;
		double a = 0.0;
		double b = 0.0;
		b = t2 * a - b + 7.6898054132986460e-20;
		a = t2 * b - a + 2.6992377659326619e-18;
		b = t2 * a - b + 8.8254387406033295e-17;
		a = t2 * b - a + 2.7421709979956262e-15;
		b = t2 * a - b + 7.8710391005406095e-14;
		a = t2 * b - a + 2.1282149011312742e-12;
		b = t2 * a - b + 5.2584578393376756e-11;
		a = t2 * b - a + 1.2095822843475072e-09;
		b = t2 * a - b + 2.5048782816678198e-08;
		a = t2 * b - a + 4.7497319492707833e-07;
		b = t2 * a - b + 7.9332196646243817e-06;
		a = t2 * b - a + 1.1831664383589482e-04;
		b = t2 * a - b + 1.5009434843764426e-03;
		a = t2 * b - a + 1.6292213717318589e-02;
		b = t2 * a - b + 1.4093465385947543e-01;
		a = t2 * b - a + 9.5486220283216648e-01;
		b = t2 * a - b + 4.3687247692351689e+00;
		return t * b - a + 5.8194804178579697e+00;
	} else if(x < 8.0) {
		double t = 16.0 / x - 3.0;
		double t2 = 2.0 * t;
		double a = 0.0;
		double b = 0.0;
		b = t2 * a - b + 5.6048263127246392e-19;
		a = t2 * b - a - 2.0455182770806705e-19;
		b = t2 * a - b - 1.9798225672504172e-17;
		a = t2 * b - a + 1.7174428790487630e-16;
		b = t2 * a - b - 6.0920420113955128e-16;
		a = t2 * b - a - 2.0288591369779357e-15;
		b = t2 * a - b + 3.9530137968642275e-14;
		a = t2 * b - a - 2.0064490443020342e-13;
		b = t2 * a - b - 2.7175096566702806e-13;
		a = t2 * b - a + 1.0106683874875754e-11;
		b = t2 * a - b - 4.5559603746644724e-11;
		a = t2 * b - a - 2.2169664258919914e-10;
		b = t2 * a - b + 2.9605661209479765e-09;
		a = t2 * b - a + 2.6351951836008528e-09;
		b = t2 * a - b - 1.5322182189270229e-07;
		a = t2 * b - a - 4.0737486681019139e-07;
		b = t2 * a - b + 7.2486379818661740e-06;
		a = t2 * b - a + 1.3622980299951755e-04;
		b = t2 * a - b + 4.1516517157561168e-03;
		return (t * b - a + 4.0970926754974821e-01) * exp(x) / sqrt(x);
	} else {
		double t = 16.0 / x - 1.0;
		double t2 = 2.0 * t;
		double a = 0.0;
		double b = 0.0;
		b = t2 * a - b - 4.8305044859441715e-18;
		a = t2 * b - a + 4.4656214202967640e-17;
		b = t2 * a - b + 3.4612228676974559e-17;
		a = t2 * b - a - 2.8276239805165834e-16;
		b = t2 * a - b - 3.4254856196772187e-16;
		a = t2 * b - a + 1.7725601330565263e-15;
		b = t2 * a - b + 3.8116806693526224e-15;
		a = t2 * b - a - 9.5548466988283076e-15;
		b = t2 * a - b - 4.1505693472872221e-14;
		a = t2 * b - a + 1.5400862175214098e-14;
		b = t2 * a - b + 3.8527783827421427e-13;
		a = t2 * b - a + 7.1801244513836662e-13;
		b = t2 * a - b - 1.7941785315068061e-12;
		a = t2 * b - a - 1.3215811840447713e-11;
		b = t2 * a - b - 3.1499165279632414e-11;
		a = t2 * b - a + 1.1889147107846438e-11;
		b = t2 * a - b + 4.9406023882249696e-10;
		a = t2 * b - a + 3.3962320257083863e-09;
		b = t2 * a - b + 2.2666689904981781e-08;
		a = t2 * b - a + 2.0489185894690637e-07;
		b = t2 * a - b + 2.8913705208347565e-06;
		a = t2 * b - a + 6.8897583469168240e-05;
		b = t2 * a - b + 3.3691164782556941e-03;
		return (t * b - a + 4.0224520550705442e-01) * exp(x) / sqrt(x);
	}
}
